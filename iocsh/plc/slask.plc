###############################################################################
# Example of pv access fucntions in ecmcPlugin_Utils
# The pvAccess commands can take "long" time, which can disturb the realtime
# thread, and is therefore executed async in a separate thread.
#
# Workflow for a "pv_get()" operation:
#  1: Regsiter PV with pv_reg_async() command (returns handle)
#  2: Wait for pv_reg_async() to finish (pv_busy())
#  3: Initiate async read command with pv_get_async())
#  4: Wait for pv_get_async() to finish (pv_busy())
#  5: Get last read value with pv_value().
#  6: Goto 3 (read again)
#
# Workflow for a "pv_put()" operation:
#  1: Regsiter PV with pv_reg_async() command (returns handle)
#  2: Wait for pv_reg_async() to finish (pv_busy())
#  3: Initiate async write command with pv_put_async())
#  4: Wait for pv_put_async() to finish (pv_busy())
#  5: Goto 3 (write again)
#
###############################################################################

${DBG=#}println('BI  :', static.BI);
${DBG=#}println('BO  :', static.BO);
var error := 0;
####### WRITE PV IOC_TEST:BO ##################################################

# Register pv IOC_TEST:BO when ecmc ioc has started
if(ioc_get_started() and static.boHandle=0) {
  static.boHandle:=pv_reg_async('IOC_TEST:BO','pva');
  if(static.boHandle < 0) {
    ${DBG=#}println('Failed reg IOC_TEST:BO');
  };
};

# Write value of "IOC_TEST:BO" when registered
if(static.boHandle > 0) {
  # Start new write if not busy
  if(not(pv_busy(static.boHandle))) {    
    var retPvBIGet:=pv_value(static.boHandle);
    println('BOvalue: ', retPvBIGet );
    error:=pv_get_async(static.boHandle);    
    static.BO:=not(static.BO);
  }  
};
